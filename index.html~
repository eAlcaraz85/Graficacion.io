<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="es" xml:lang="es">
<head>
<!-- 2024-09-10 mar 12:18 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Apuntes Graficación</title>
<meta name="author" content="likcos" />
<meta name="generator" content="Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { }
</style>
<link rel="stylesheet" type="text/css" href="src/readtheorg_theme/css/htmlize.css"/>
<link rel="stylesheet" type="text/css" href="src/readtheorg_theme/css/readtheorg.css"/>
<script type="text/javascript" src="src/lib/js/jquery.min.js"></script>
<script type="text/javascript" src="src/lib/js/bootstrap.min.js"></script>
<script type="text/javascript" src="src/lib/js/jquery.stickytableheaders.min.js"></script>
<script type="text/javascript" src="src/readtheorg_theme/js/readtheorg.js"></script>
<style> #content{max-width:1800px;}</style>
<style>pre.src {background-color: #303030; color: #e5e5e5;}</style>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
        displayAlign: "center",
        displayIndent: "0em",

        "HTML-CSS": { scale: 100,
                        linebreaks: { automatic: "false" },
                        webFont: "TeX"
                       },
        SVG: {scale: 100,
              linebreaks: { automatic: "false" },
              font: "TeX"},
        NativeMML: {scale: 100},
        TeX: { equationNumbers: {autoNumber: "AMS"},
               MultLineWidth: "85%",
               TagSide: "right",
               TagIndent: ".8em"
             }
});
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML"></script>
</head>
<body>
<div id="content" class="content">
<h1 class="title">Apuntes Graficación</h1>
<div id="table-of-contents" role="doc-toc">
<h2>&Iacute;ndice</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#orgab36daf">Manual de Instalación de Git</a>
<ul>
<li><a href="#org74ea795">Instalación en Windows</a></li>
<li><a href="#org3629bca">Instalación en macOS</a>
<ul>
<li><a href="#org851ea19">Método recomendado: usando Homebrew</a></li>
<li><a href="#org413d7e1">Método alternativo: paquete descargado</a></li>
</ul>
</li>
<li><a href="#org6c1ed7b">Instalación en Linux (Distribuciones basadas en Debian/Ubuntu)</a></li>
<li><a href="#org2cbf276">Configuración básica de Git</a></li>
<li><a href="#orgd3ce31d">Actualización de Git</a></li>
<li><a href="#orgc1587b9">Configurar Llave SSH con GitHub</a>
<ul>
<li><a href="#org1e7f7a2">1. Verificar si ya tienes una llave SSH</a></li>
<li><a href="#org0dda431">2. Generar una nueva llave SSH</a></li>
<li><a href="#org4ca612c">3. Añadir la llave SSH al agente SSH</a></li>
<li><a href="#orgec64be3">4. Copiar la llave SSH pública</a></li>
<li><a href="#orgf11373b">5. Añadir la llave SSH a GitHub</a></li>
<li><a href="#org78c97ab">6. Probar la conexión SSH con GitHub</a></li>
<li><a href="#org0f6df6d">7. Usar la conexión SSH en repositorios de GitHub</a></li>
</ul>
</li>
<li><a href="#orgc635bd2">Configurar Llave SSH con GitHub en Windows</a>
<ul>
<li><a href="#orgf234c42">1. Abrir Git Bash</a></li>
<li><a href="#orgd6f2395">2. Verificar si ya tienes una llave SSH</a></li>
<li><a href="#org49320f3">3. Generar una nueva llave SSH</a></li>
<li><a href="#orge8b01bd">4. Añadir la llave SSH al agente SSH</a></li>
<li><a href="#org71aadae">5. Copiar la llave SSH pública</a></li>
<li><a href="#orga21d6f7">6. Añadir la llave SSH a GitHub</a></li>
<li><a href="#org8c94b8d">7. Probar la conexión SSH con GitHub</a></li>
<li><a href="#orge547803">8. Usar la conexión SSH en repositorios de GitHub</a></li>
</ul>
</li>
<li><a href="#orge875125">Manual de Git en Windows</a>
<ul>
<li><a href="#org3a57f4d">1. Instalar Git en Windows</a></li>
<li><a href="#orged8b59a">2. Configurar Git</a></li>
<li><a href="#org24a08d1">3. Clonar un repositorio</a></li>
<li><a href="#orgca628ec">4. Comandos básicos de Git</a></li>
<li><a href="#org7742e78">5. Actualizar el repositorio local</a></li>
<li><a href="#orgafa887a">6. Crear y cambiar de ramas (branches)</a></li>
<li><a href="#org5f69040">7. Ver historial de commits</a></li>
<li><a href="#org3e55e85">8. Configurar una llave SSH</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org10af18b">Manual de Instalación de Python en Windows</a>
<ul>
<li><a href="#org749bae4">Paso 1: Descarga de Python</a></li>
<li><a href="#org7dd3b4b">Paso 2: Ejecutar el instalador</a></li>
<li><a href="#orgcf8bec2">Paso 3: Verificación de la instalación</a></li>
<li><a href="#org7c6ecd3">Paso 4: Instalar pip y otros paquetes</a></li>
<li><a href="#org6904356">Paso 5: Configuración del entorno de desarrollo</a></li>
<li><a href="#orga41b18e">Paso 6: Actualización de Python (opcional)</a></li>
</ul>
</li>
<li><a href="#org0dec484">Graficación por Computadora</a>
<ul>
<li><a href="#org2afc020">Objetivos de la Graficación por Computadora</a></li>
<li><a href="#org7405a67">Áreas de estudio en Graficación por Computadora</a></li>
<li><a href="#org4554723">Aplicaciones de la Graficación por Computadora</a></li>
<li><a href="#org5248c6d">Temas principales en Graficación por Computadora</a></li>
</ul>
</li>
<li><a href="#orgb355303">El modelo de color RGB</a>
<ul>
<li><a href="#org5aa26be">Funcionamiento en dispositivos electrónicos</a></li>
<li><a href="#org85f29a5">Matemáticas del modelo RGB</a></li>
</ul>
</li>
<li><a href="#org7b93187">Programación</a>
<ul>
<li><a href="#orge340e5a">Creación de una Imagen</a></li>
<li><a href="#orgbc53dae">Cargar Imagen</a></li>
<li><a href="#org260b1d1">Split y Merge Imagen</a></li>
</ul>
</li>
</ul>
</div>
</div>


<div id="outline-container-orgab36daf" class="outline-2">
<h2 id="orgab36daf">Manual de Instalación de Git</h2>
<div class="outline-text-2" id="text-orgab36daf">
</div>
<div id="outline-container-org74ea795" class="outline-3">
<h3 id="org74ea795">Instalación en Windows</h3>
<div class="outline-text-3" id="text-org74ea795">
<ul class="org-ul">
<li>Descarga el instalador desde [<a href="https://git-scm.com/">https://git-scm.com/</a>].</li>
</ul>



<ul class="org-ul">
<li>Haz clic en el botón “Download for Windows”.
<ul class="org-ul">
<li>Ejecuta el archivo descargado (.exe).</li>

<li>Configuración de las opciones recomendadas durante la instalación:
<ul class="org-ul">
<li>Seleccionar el editor por defecto (por ejemplo, Vim o Notepad++).</li>
<li>Usar Git desde la línea de comandos y aplicaciones de terceros (opción recomendada).</li>
<li>Opciones de formato de fin de línea: selecciona la opción predeterminada para Windows.</li>
</ul></li>

<li>Completa la instalación.</li>
<li>Verifica la instalación abriendo Git Bash o Command Prompt y ejecutando:</li>
</ul></li>
</ul>
<div class="org-src-container">
<pre class="src src-bash">git --version
</pre>
</div>
</div>
</div>

<div id="outline-container-org3629bca" class="outline-3">
<h3 id="org3629bca">Instalación en macOS</h3>
<div class="outline-text-3" id="text-org3629bca">
</div>
<div id="outline-container-org851ea19" class="outline-4">
<h4 id="org851ea19">Método recomendado: usando Homebrew</h4>
<div class="outline-text-4" id="text-org851ea19">
<ul class="org-ul">
<li>Si tienes Homebrew instalado, abre la terminal y ejecuta:</li>
</ul>
<div class="org-src-container">
<pre class="src src-bash">brew install git
</pre>
</div>
</div>
</div>

<div id="outline-container-org413d7e1" class="outline-4">
<h4 id="org413d7e1">Método alternativo: paquete descargado</h4>
<div class="outline-text-4" id="text-org413d7e1">
<ul class="org-ul">
<li>Descarga el instalador desde [<a href="https://git-scm.com/">https://git-scm.com/</a>].</li>
<li>Ejecuta el paquete descargado (.dmg).</li>
<li>Sigue las instrucciones de instalación.</li>

<li><p>
Verifica la instalación abriendo la terminal y ejecutando:
</p>
<div class="org-src-container">
<pre class="src src-bash">git --version
</pre>
</div></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org6c1ed7b" class="outline-3">
<h3 id="org6c1ed7b">Instalación en Linux (Distribuciones basadas en Debian/Ubuntu)</h3>
<div class="outline-text-3" id="text-org6c1ed7b">
<ul class="org-ul">
<li><p>
Abre la terminal y ejecuta:
</p>
<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install git
</pre>
</div></li>

<li><p>
Verifica la instalación ejecutando:
</p>
<div class="org-src-container">
<pre class="src src-bash">git --version
</pre>
</div></li>
</ul>
</div>
</div>

<div id="outline-container-org2cbf276" class="outline-3">
<h3 id="org2cbf276">Configuración básica de Git</h3>
<div class="outline-text-3" id="text-org2cbf276">
<ul class="org-ul">
<li><p>
Configura tu nombre de usuario:
</p>
<div class="org-src-container">
<pre class="src src-bash">git config --global user.name <span style="color: #c3e88d;">"Tu Nombre"</span>
</pre>
</div></li>

<li><p>
Configura tu correo electrónico:
</p>
<div class="org-src-container">
<pre class="src src-bash">git config --global user.email <span style="color: #c3e88d;">"tuemail@ejemplo.com"</span>
</pre>
</div></li>

<li><p>
Verifica la configuración:
</p>
<div class="org-src-container">
<pre class="src src-bash">git config --list
</pre>
</div></li>
</ul>
</div>
</div>

<div id="outline-container-orgd3ce31d" class="outline-3">
<h3 id="orgd3ce31d">Actualización de Git</h3>
<div class="outline-text-3" id="text-orgd3ce31d">
<ul class="org-ul">
<li><b>Windows</b>: Ejecuta el instalador más reciente desde el sitio oficial.</li>
<li><p>
<b>macOS</b>: Ejecuta:
</p>
<div class="org-src-container">
<pre class="src src-bash">brew upgrade git
</pre>
</div></li>
<li><p>
<b>Linux</b>: Ejecuta:
</p>
<div class="org-src-container">
<pre class="src src-bash">sudo apt update &amp;&amp; sudo apt upgrade git
</pre>
</div></li>
</ul>
</div>
</div>



<div id="outline-container-orgc1587b9" class="outline-3">
<h3 id="orgc1587b9">Configurar Llave SSH con GitHub</h3>
<div class="outline-text-3" id="text-orgc1587b9">
</div>
<div id="outline-container-org1e7f7a2" class="outline-4">
<h4 id="org1e7f7a2">1. Verificar si ya tienes una llave SSH</h4>
<div class="outline-text-4" id="text-org1e7f7a2">
<ul class="org-ul">
<li><p>
Abre la terminal y ejecuta el siguiente comando para verificar si ya tienes llaves SSH generadas:
</p>
<div class="org-src-container">
<pre class="src src-bash">ls -al ~/.ssh
</pre>
</div></li>

<li>Si ves archivos como `id<sub>rsa</sub>` o `id<sub>ed25519</sub>`, ya tienes llaves SSH. Si no, continúa con el siguiente paso.</li>
</ul>
</div>
</div>

<div id="outline-container-org0dda431" class="outline-4">
<h4 id="org0dda431">2. Generar una nueva llave SSH</h4>
<div class="outline-text-4" id="text-org0dda431">
<ul class="org-ul">
<li><p>
Si no tienes una llave SSH, genera una nueva con el siguiente comando (puedes cambiar `ed25519` por `rsa` si lo prefieres):
</p>
<div class="org-src-container">
<pre class="src src-bash">ssh-keygen -t ed25519 -C <span style="color: #c3e88d;">"tuemail@ejemplo.com"</span>
</pre>
</div></li>

<li>Cuando se te pregunte por la ubicación del archivo, presiona `Enter` para usar la ubicación predeterminada (`~/.ssh/id<sub>ed25519</sub>`).</li>
<li>Puedes agregar una contraseña para proteger tu llave, pero también puedes dejarlo en blanco.</li>
</ul>
</div>
</div>

<div id="outline-container-org4ca612c" class="outline-4">
<h4 id="org4ca612c">3. Añadir la llave SSH al agente SSH</h4>
<div class="outline-text-4" id="text-org4ca612c">
<ul class="org-ul">
<li><p>
Para añadir tu nueva llave SSH al agente, asegúrate de que esté en ejecución:
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #c099ff;">eval</span> <span style="color: #c3e88d;">"$(ssh-agent -s)"</span>
</pre>
</div></li>

<li><p>
Añade la llave SSH al agente:
</p>
<div class="org-src-container">
<pre class="src src-bash">ssh-add ~/.ssh/id_ed25519
</pre>
</div></li>
</ul>
</div>
</div>

<div id="outline-container-orgec64be3" class="outline-4">
<h4 id="orgec64be3">4. Copiar la llave SSH pública</h4>
<div class="outline-text-4" id="text-orgec64be3">
<ul class="org-ul">
<li><p>
Copia el contenido de tu llave pública para añadirla a GitHub:
</p>
<div class="org-src-container">
<pre class="src src-bash">cat ~/.ssh/id_ed25519.pub
</pre>
</div></li>

<li>Copia el texto que aparece en la terminal (comienza con `ssh-ed25519` o `ssh-rsa`).</li>
</ul>
</div>
</div>

<div id="outline-container-orgf11373b" class="outline-4">
<h4 id="orgf11373b">5. Añadir la llave SSH a GitHub</h4>
<div class="outline-text-4" id="text-orgf11373b">
<ul class="org-ul">
<li>Inicia sesión en tu cuenta de GitHub.</li>
<li>Ve a la sección de <b>Settings</b> (Configuración).</li>
<li>En el menú lateral izquierdo, selecciona <b><b>SSH and GPG keys</b></b>.</li>
<li>Haz clic en <b>New SSH key</b>.</li>
<li>Introduce un título para identificar la llave (por ejemplo, "Mi computadora personal") y pega la llave pública copiada en el campo correspondiente.</li>
<li>Haz clic en <b>Add SSH key</b>.</li>
</ul>
</div>
</div>

<div id="outline-container-org78c97ab" class="outline-4">
<h4 id="org78c97ab">6. Probar la conexión SSH con GitHub</h4>
<div class="outline-text-4" id="text-org78c97ab">
<ul class="org-ul">
<li><p>
Para verificar que todo está configurado correctamente, ejecuta el siguiente comando:
</p>
<div class="org-src-container">
<pre class="src src-bash">ssh -T git@github.com
</pre>
</div></li>

<li>Si es la primera vez que te conectas, verás una advertencia preguntando si deseas continuar. Escribe `yes`.</li>
<li><p>
Si la conexión es exitosa, verás un mensaje similar a:
</p>
<blockquote>
<p>
Hi username! You've successfully authenticated, but GitHub does not provide shell access.
</p>
</blockquote></li>
</ul>
</div>
</div>

<div id="outline-container-org0f6df6d" class="outline-4">
<h4 id="org0f6df6d">7. Usar la conexión SSH en repositorios de GitHub</h4>
<div class="outline-text-4" id="text-org0f6df6d">
<ul class="org-ul">
<li><p>
Para clonar un repositorio usando SSH, utiliza la URL SSH del repositorio:
</p>
<div class="org-src-container">
<pre class="src src-bash">git clone git@github.com:usuario/repo.git
</pre>
</div></li>
</ul>
</div>
</div>
</div>



<div id="outline-container-orgc635bd2" class="outline-3">
<h3 id="orgc635bd2">Configurar Llave SSH con GitHub en Windows</h3>
<div class="outline-text-3" id="text-orgc635bd2">
<ol class="org-ol">
<li>Git Bash: En Windows, utilizas Git Bash como terminal para ejecutar los comandos, en lugar de la terminal estándar de Linux o macOS.</li>

<li>Ruta de las llaves: En Git Bash, las rutas siguen el formato Unix (<i>c/Users/tu<sub>usuario</sub></i>.ssh/ en lugar de C:\Users\tu<sub>usuario\.ssh</sub>).</li>
</ol>
</div>



<div id="outline-container-orgf234c42" class="outline-4">
<h4 id="orgf234c42">1. Abrir Git Bash</h4>
<div class="outline-text-4" id="text-orgf234c42">
<ul class="org-ul">
<li>Abre <b><b>Git Bash</b></b> (es la terminal que se instala junto con Git en Windows).</li>
</ul>
</div>
</div>

<div id="outline-container-orgd6f2395" class="outline-4">
<h4 id="orgd6f2395">2. Verificar si ya tienes una llave SSH</h4>
<div class="outline-text-4" id="text-orgd6f2395">
<ul class="org-ul">
<li><p>
En la terminal de Git Bash, ejecuta el siguiente comando para ver si ya tienes llaves SSH generadas:
</p>
<div class="org-src-container">
<pre class="src src-bash">ls -al ~/.ssh
</pre>
</div></li>

<li>Si ves archivos como `id<sub>rsa</sub>` o `id<sub>ed25519</sub>`, ya tienes llaves SSH. Si no, continúa con el siguiente paso.</li>
</ul>
</div>
</div>

<div id="outline-container-org49320f3" class="outline-4">
<h4 id="org49320f3">3. Generar una nueva llave SSH</h4>
<div class="outline-text-4" id="text-org49320f3">
<ul class="org-ul">
<li><p>
Si no tienes una llave SSH, genera una nueva con el siguiente comando:
</p>
<div class="org-src-container">
<pre class="src src-bash">ssh-keygen -t ed25519 -C <span style="color: #c3e88d;">"tuemail@ejemplo.com"</span>
</pre>
</div></li>

<li>Cuando se te pregunte por la ubicación del archivo, presiona `Enter` para usar la ubicación predeterminada (`/c/Users/tu<sub>usuario</sub>/.ssh/id<sub>ed25519</sub>`).</li>
<li>Puedes agregar una contraseña para proteger tu llave, pero también puedes dejar el campo vacío si no deseas protegerla con una contraseña.</li>
</ul>
</div>
</div>

<div id="outline-container-orge8b01bd" class="outline-4">
<h4 id="orge8b01bd">4. Añadir la llave SSH al agente SSH</h4>
<div class="outline-text-4" id="text-orge8b01bd">
<ul class="org-ul">
<li><p>
Asegúrate de que el agente SSH esté en ejecución. En Git Bash, ejecuta:
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #c099ff;">eval</span> <span style="color: #c3e88d;">"$(ssh-agent -s)"</span>
</pre>
</div></li>

<li><p>
Añade tu nueva llave SSH al agente:
</p>
<div class="org-src-container">
<pre class="src src-bash">ssh-add ~/.ssh/id_ed25519
</pre>
</div></li>
</ul>
</div>
</div>

<div id="outline-container-org71aadae" class="outline-4">
<h4 id="org71aadae">5. Copiar la llave SSH pública</h4>
<div class="outline-text-4" id="text-org71aadae">
<ul class="org-ul">
<li><p>
Para añadir la llave SSH a GitHub, necesitas copiar tu llave pública. Ejecuta el siguiente comando en Git Bash:
</p>
<div class="org-src-container">
<pre class="src src-bash">cat ~/.ssh/id_ed25519.pub
</pre>
</div></li>

<li>Copia el texto que aparece en la terminal, que comenzará con `ssh-ed25519` o `ssh-rsa`.</li>
</ul>
</div>
</div>

<div id="outline-container-orga21d6f7" class="outline-4">
<h4 id="orga21d6f7">6. Añadir la llave SSH a GitHub</h4>
<div class="outline-text-4" id="text-orga21d6f7">
<ul class="org-ul">
<li>Abre tu navegador web e inicia sesión en GitHub.</li>
<li>Ve a la sección de <b>Settings</b> (Configuración).</li>
<li>En el menú lateral izquierdo, selecciona <b><b>SSH and GPG keys</b></b>.</li>
<li>Haz clic en <b>New SSH key</b>.</li>
<li>Ponle un título descriptivo (como "Mi computadora con Windows") y pega la llave pública copiada en el campo correspondiente.</li>
<li>Haz clic en <b>Add SSH key</b>.</li>
</ul>
</div>
</div>

<div id="outline-container-org8c94b8d" class="outline-4">
<h4 id="org8c94b8d">7. Probar la conexión SSH con GitHub</h4>
<div class="outline-text-4" id="text-org8c94b8d">
<ul class="org-ul">
<li><p>
Para asegurarte de que todo está correctamente configurado, prueba la conexión con GitHub desde Git Bash:
</p>
<div class="org-src-container">
<pre class="src src-bash">ssh -T git@github.com
</pre>
</div></li>

<li>Si es la primera vez que te conectas, te pedirá confirmar la conexión escribiendo `yes`.</li>
<li><p>
Si todo está bien, deberías ver un mensaje como:
</p>
<blockquote>
<p>
Hi username! You've successfully authenticated, but GitHub does not provide shell access.
</p>
</blockquote></li>
</ul>
</div>
</div>

<div id="outline-container-orge547803" class="outline-4">
<h4 id="orge547803">8. Usar la conexión SSH en repositorios de GitHub</h4>
<div class="outline-text-4" id="text-orge547803">
<ul class="org-ul">
<li><p>
Para clonar un repositorio usando la URL SSH, ejecuta:
</p>
<div class="org-src-container">
<pre class="src src-bash">git clone git@github.com:usuario/repo.git
</pre>
</div></li>
</ul>
</div>
</div>
</div>




<div id="outline-container-orge875125" class="outline-3">
<h3 id="orge875125">Manual de Git en Windows</h3>
<div class="outline-text-3" id="text-orge875125">
</div>
<div id="outline-container-org3a57f4d" class="outline-4">
<h4 id="org3a57f4d">1. Instalar Git en Windows</h4>
<div class="outline-text-4" id="text-org3a57f4d">
<ul class="org-ul">
<li>Visita [<a href="https://git-scm.com/">https://git-scm.com/</a>](<a href="https://git-scm.com/">https://git-scm.com/</a>) y descarga el instalador de Git para Windows.</li>
<li>Ejecuta el archivo descargado (.exe).</li>
<li>Durante la instalación, selecciona las opciones predeterminadas recomendadas.</li>
<li>Abre <b>Git Bash</b> al finalizar la instalación.</li>
</ul>
</div>
</div>

<div id="outline-container-orged8b59a" class="outline-4">
<h4 id="orged8b59a">2. Configurar Git</h4>
<div class="outline-text-4" id="text-orged8b59a">
<ul class="org-ul">
<li>Abre <b>Git Bash</b> y ejecuta los siguientes comandos para configurar tu identidad:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git config --global user.name <span style="color: #c3e88d;">"Tu Nombre"</span>
git config --global user.email <span style="color: #c3e88d;">"tuemail@ejemplo.com"</span>
</pre>
</div>

<ul class="org-ul">
<li>Para verificar la configuración:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git config --list
</pre>
</div>
</div>
</div>

<div id="outline-container-org24a08d1" class="outline-4">
<h4 id="org24a08d1">3. Clonar un repositorio</h4>
<div class="outline-text-4" id="text-org24a08d1">
<ul class="org-ul">
<li>Para clonar un repositorio desde GitHub, usa el siguiente comando:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git clone https://github.com/usuario/repo.git
</pre>
</div>

<p>
Esto descargará el repositorio a tu computadora.
</p>
</div>
</div>

<div id="outline-container-orgca628ec" class="outline-4">
<h4 id="orgca628ec">4. Comandos básicos de Git</h4>
<div class="outline-text-4" id="text-orgca628ec">
<ul class="org-ul">
<li><b>Verificar el estado del repositorio</b>:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git status
</pre>
</div>

<ul class="org-ul">
<li><b>Añadir archivos al área de preparación (staging)</b>:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git add nombre_de_archivo
</pre>
</div>

<ul class="org-ul">
<li>Para añadir todos los archivos modificados:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git add .
</pre>
</div>

<ul class="org-ul">
<li><b>Hacer un commit</b> (guardar los cambios localmente):</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git commit -m <span style="color: #c3e88d;">"Mensaje de commit"</span>
</pre>
</div>

<ul class="org-ul">
<li><b>Enviar los cambios al repositorio remoto</b>:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git push
</pre>
</div>
</div>
</div>

<div id="outline-container-org7742e78" class="outline-4">
<h4 id="org7742e78">5. Actualizar el repositorio local</h4>
<div class="outline-text-4" id="text-org7742e78">
<ul class="org-ul">
<li>Para obtener los últimos cambios del repositorio remoto:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git pull
</pre>
</div>
</div>
</div>

<div id="outline-container-orgafa887a" class="outline-4">
<h4 id="orgafa887a">6. Crear y cambiar de ramas (branches)</h4>
<div class="outline-text-4" id="text-orgafa887a">
<ul class="org-ul">
<li><b>Crear una nueva rama</b>:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git branch nombre_de_la_rama
</pre>
</div>

<ul class="org-ul">
<li><b>Cambiar a una rama existente</b>:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git checkout nombre_de_la_rama
</pre>
</div>

<ul class="org-ul">
<li><b>Crear y cambiar a una nueva rama</b>:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git checkout -b nombre_de_la_rama
</pre>
</div>
</div>
</div>

<div id="outline-container-org5f69040" class="outline-4">
<h4 id="org5f69040">7. Ver historial de commits</h4>
<div class="outline-text-4" id="text-org5f69040">
<ul class="org-ul">
<li>Para ver el historial de cambios del repositorio:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git log
</pre>
</div>

<ul class="org-ul">
<li>Para un historial más compacto:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">git log --oneline
</pre>
</div>
</div>
</div>

<div id="outline-container-org3e55e85" class="outline-4">
<h4 id="org3e55e85">8. Configurar una llave SSH</h4>
<div class="outline-text-4" id="text-org3e55e85">
<ul class="org-ul">
<li><b>Generar una llave SSH</b>:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">ssh-keygen -t ed25519 -C <span style="color: #c3e88d;">"tuemail@ejemplo.com"</span>
</pre>
</div>

<ul class="org-ul">
<li><b>Añadir la llave al agente SSH</b>:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #c099ff;">eval</span> <span style="color: #c3e88d;">"$(ssh-agent -s)"</span>
ssh-add ~/.ssh/id_ed25519
</pre>
</div>

<ul class="org-ul">
<li><b>Copiar la llave pública</b>:</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash">cat ~/.ssh/id_ed25519.pub
</pre>
</div>

<ul class="org-ul">
<li>Añádela a tu cuenta de GitHub en <b>Settings &gt; SSH and GPG keys</b>.</li>
</ul>
</div>
</div>
</div>
</div>


<div id="outline-container-org10af18b" class="outline-2">
<h2 id="org10af18b">Manual de Instalación de Python en Windows</h2>
<div class="outline-text-2" id="text-org10af18b">
</div>
<div id="outline-container-org749bae4" class="outline-3">
<h3 id="org749bae4">Paso 1: Descarga de Python</h3>
<div class="outline-text-3" id="text-org749bae4">
<ol class="org-ol">
<li>Abre el navegador web y visita el sitio: <a href="https://www.python.org">https://www.python.org</a>.</li>
<li>Ve a la pestaña "Downloads" y selecciona la versión más reciente para Windows.</li>
<li>Haz clic en el botón que dice "Download Python (versión actual)" para descargar el instalador de Python.</li>
</ol>
</div>
</div>

<div id="outline-container-org7dd3b4b" class="outline-3">
<h3 id="org7dd3b4b">Paso 2: Ejecutar el instalador</h3>
<div class="outline-text-3" id="text-org7dd3b4b">
<ol class="org-ol">
<li>Ejecuta el archivo descargado (.exe).</li>
<li>Asegúrate de marcar la opción <code>Add Python to PATH</code> antes de proceder con la instalación.</li>
<li>Haz clic en <code>Install Now</code> para instalar con la configuración predeterminada.</li>
<li>Espera a que finalice el proceso de instalación y verifica el mensaje de éxito.</li>
</ol>
</div>
</div>

<div id="outline-container-orgcf8bec2" class="outline-3">
<h3 id="orgcf8bec2">Paso 3: Verificación de la instalación</h3>
<div class="outline-text-3" id="text-orgcf8bec2">
<ol class="org-ol">
<li>Abre la línea de comandos (cmd) escribiendo "cmd" en el menú de inicio.</li>
<li><p>
Verifica que Python se instaló correctamente ejecutando el siguiente comando:
</p>
<div class="org-src-container">
<pre class="src src-bash">python --version
</pre>
</div></li>
<li><p>
Abre el intérprete de Python escribiendo <code>python</code> en la línea de comandos:
</p>
<div class="org-src-container">
<pre class="src src-bash">python
</pre>
</div>
<p>
Si todo está bien, verás el prompt interactivo de Python (tres símbolos <code>&gt;&gt;&gt;</code>).
</p></li>
<li>Para salir del intérprete, escribe <code>exit()</code> o presiona <code>Ctrl + Z</code> seguido de <code>Enter</code>.</li>
</ol>
</div>
</div>

<div id="outline-container-org7c6ecd3" class="outline-3">
<h3 id="org7c6ecd3">Paso 4: Instalar pip y otros paquetes</h3>
<div class="outline-text-3" id="text-org7c6ecd3">
<ol class="org-ol">
<li><p>
Verifica si pip está instalado escribiendo en la línea de comandos:
</p>
<div class="org-src-container">
<pre class="src src-bash">pip --version
</pre>
</div></li>
<li><p>
Si necesitas instalar paquetes, usa pip con el siguiente comando:
</p>
<div class="org-src-container">
<pre class="src src-bash">pip install nombre_paquete
</pre>
</div></li>
</ol>
</div>
</div>

<div id="outline-container-org6904356" class="outline-3">
<h3 id="org6904356">Paso 5: Configuración del entorno de desarrollo</h3>
<div class="outline-text-3" id="text-org6904356">
<ol class="org-ol">
<li>Instala un editor de código como:
<ul class="org-ul">
<li><a href="https://code.visualstudio.com">Visual Studio Code</a></li>
<li><a href="https://www.jetbrains.com/pycharm/">PyCharm</a></li>
</ul></li>
<li>Configura el editor instalando las extensiones de Python. En Visual Studio Code, busca la extensión "Python" en el panel de extensiones.</li>
</ol>
</div>
</div>

<div id="outline-container-orga41b18e" class="outline-3">
<h3 id="orga41b18e">Paso 6: Actualización de Python (opcional)</h3>
<div class="outline-text-3" id="text-orga41b18e">
<ul class="org-ul">
<li>Para actualizar Python a una nueva versión en el futuro, descarga la última versión desde <a href="https://www.python.org/downloads/">python.org</a> y sigue los pasos de instalación.</li>
</ul>
</div>
</div>
</div>


<div id="outline-container-org0dec484" class="outline-2">
<h2 id="org0dec484">Graficación por Computadora</h2>
<div class="outline-text-2" id="text-org0dec484">
<p>
La  Graficación por Computadora (o simplemente Graficación)
se enfoca en el estudio y aplicación de técnicas, algoritmos y
herramientas para la generación y manipulación de imágenes digitales
mediante el uso de computadoras. Es una rama de la informática que
combina conceptos de matemáticas, física y programación para crear
imágenes, animaciones y efectos visuales. A continuación, te describo
los aspectos clave de esta disciplina:
</p>
</div>

<div id="outline-container-org2afc020" class="outline-3">
<h3 id="org2afc020">Objetivos de la Graficación por Computadora</h3>
<div class="outline-text-3" id="text-org2afc020">
<ol class="org-ol">
<li><b>Generación de imágenes</b>: Crear imágenes digitales a partir de descripciones matemáticas y geométricas de objetos, en 2D y 3D.</li>
<li><b>Modelado de objetos</b>: Crear representaciones matemáticas de objetos y escenas usando técnicas como polígonos, mallas y curvas.</li>
<li><b>Renderizado</b>: Convertir representaciones matemáticas en imágenes visuales, simulando iluminación, sombras y texturas.</li>
<li><b>Transformaciones geométricas</b>: Aplicar traslaciones, rotaciones, escalados y proyecciones a objetos en sistemas de coordenadas 2D y 3D.</li>
<li><b>Iluminación y sombreado</b>: Simular cómo la luz interactúa con los objetos para crear efectos realistas.</li>
<li><b>Animación</b>: Generar secuencias de imágenes que cambian a lo largo del tiempo, incluyendo movimientos y simulaciones físicas.</li>
<li><b>Texturizado</b>: Aplicar imágenes (texturas) sobre superficies para dar detalles visuales sin aumentar la complejidad geométrica.</li>
<li><b>Interacción gráfica</b>: Estudiar técnicas para interactuar con imágenes o modelos gráficos, como interfaces gráficas, realidad aumentada o virtual.</li>
</ol>
</div>
</div>

<div id="outline-container-org7405a67" class="outline-3">
<h3 id="org7405a67">Áreas de estudio en Graficación por Computadora</h3>
<div class="outline-text-3" id="text-org7405a67">
<ol class="org-ol">
<li><b>Matemáticas</b>: Uso de geometría y álgebra lineal para realizar transformaciones geométricas y modelar objetos.</li>
<li><b>Programación</b>: Conocimiento de lenguajes como C++, Python, GLSL y HLSL para implementar algoritmos gráficos.</li>
<li><b>Algoritmos gráficos</b>: Estudio de algoritmos como el trazado de rayos (ray tracing), rasterización y z-buffering.</li>
<li><b>Herramientas gráficas</b>: Uso de APIs como OpenGL, DirectX o Vulkan para crear gráficos y animaciones.</li>
<li><b>Física aplicada</b>: Simulación de fenómenos físicos como gravedad y movimiento para generar gráficos realistas.</li>
</ol>
</div>
</div>

<div id="outline-container-org4554723" class="outline-3">
<h3 id="org4554723">Aplicaciones de la Graficación por Computadora</h3>
<div class="outline-text-3" id="text-org4554723">
<ul class="org-ul">
<li><b>Videojuegos</b>: Creación de ambientes, personajes y efectos visuales.</li>
<li><b>Cine y efectos visuales</b>: Creación de efectos especiales y animación por computadora.</li>
<li><b>Diseño industrial y arquitectónico</b>: Modelado y visualización de prototipos y estructuras.</li>
<li><b>Simulaciones</b>: Uso en medicina, aeronáutica y otras industrias para crear simulaciones realistas.</li>
<li><b>Realidad virtual y aumentada</b>: Generación de entornos interactivos virtuales.</li>
</ul>
</div>
</div>

<div id="outline-container-org5248c6d" class="outline-3">
<h3 id="org5248c6d">Temas principales en Graficación por Computadora</h3>
<div class="outline-text-3" id="text-org5248c6d">
<ul class="org-ul">
<li><b>Modelado 2D y 3D</b></li>
<li><b>Algoritmos de rasterización</b></li>
<li><b>Transformaciones y proyecciones</b></li>
<li><b>Renderizado y sombreado</b></li>
<li><b>Texturizado</b></li>
<li><b>Iluminación global y local</b></li>
<li><b>Técnicas de animación</b></li>
<li><b>Programación de shaders</b></li>
<li><b>Interacción gráfica y diseño de interfaces</b></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-orgb355303" class="outline-2">
<h2 id="orgb355303">El modelo de color RGB</h2>
<div class="outline-text-2" id="text-orgb355303">
<p>
El <b>modelo de color RGB</b> es un sistema aditivo de representación de colores basado en la combinación de tres colores primarios: <b>Rojo (Red)</b>, <b>Verde (Green)</b> y <b>Azul (Blue)</b>. Este modelo se usa principalmente en dispositivos que emiten luz, como pantallas de computadoras, televisores, cámaras digitales y escáneres.
</p>

<p>
<b>Principios básicos</b>
</p>
<ul class="org-ul">
<li><p>
<b>Adición de colores</b>: En el modelo RGB, los colores se crean al
sumar intensidades de luz de los tres colores primarios. La
combinación de los tres colores en su máxima intensidad produce
<b><b>blanco</b></b>. Si no hay luz (intensidad cero en los tres canales), se
obtiene el <b><b>negro</b></b>.
</p>

<p>
\[
  \text{Blanco} = \text{Rojo}(255) + \text{Verde}(255) + \text{Azul}(255) = (255, 255, 255)
  \]
</p>

<p>
Cada canal de color (<b>R</b>, <b>G</b>, <b>B</b>) puede tener un valor entre 0 y
255, dando un total de:
</p>

<p>
\[
  \text{Total de colores posibles} = 256^3 = 16,777,216
  \]
</p></li>
</ul>

<p>
<b>Combinaciones de colores</b>
</p>
<ul class="org-ul">
<li><b>Rojo</b>: (255, 0, 0)</li>
<li><b>Verde</b>: (0, 255, 0)</li>
<li><b>Azul</b>: (0, 0, 255)</li>
<li><b>Blanco</b>: (255, 255, 255)</li>
<li><b>Negro</b>: (0, 0, 0)</li>
<li><b>Amarillo</b>: (255, 255, 0) - Suma de rojo y verde.</li>
<li><b>Cian</b>: (0, 255, 255) - Suma de verde y azul.</li>
<li><b>Magenta</b>: (255, 0, 255) - Suma de rojo y azul.</li>
</ul>
</div>

<div id="outline-container-org5aa26be" class="outline-3">
<h3 id="org5aa26be">Funcionamiento en dispositivos electrónicos</h3>
<div class="outline-text-3" id="text-org5aa26be">
<p>
El modelo RGB es utilizado principalmente en dispositivos electrónicos
que emiten luz. Cada píxel en una pantalla está compuesto de
subpíxeles que emiten luz roja, verde y azul. Al variar la intensidad
de estos subpíxeles, los humanos perciben diferentes colores.
</p>
</div>
</div>

<div id="outline-container-org85f29a5" class="outline-3">
<h3 id="org85f29a5">Matemáticas del modelo RGB</h3>
<div class="outline-text-3" id="text-org85f29a5">
<ol class="org-ol">
<li><p>
Cada color en el modelo RGB puede representarse como un vector de
tres componentes:
</p>

<p>
\[
   C = \begin{pmatrix} R \\ G \\ B \end{pmatrix}
   \]
</p>

<p>
donde \( R \), \( G \) y \( B \) representan las intensidades de
rojo, verde y azul, respectivamente.
</p></li>

<li>Para la mezcla aditiva de colores, se usa la suma vectorial. Por ejemplo, para combinar rojo y verde:
\[
   \text{Amarillo} = \begin{pmatrix} 255 \\ 0 \\ 0 \end{pmatrix} + \begin{pmatrix} 0 \\ 255 \\ 0 \end{pmatrix} = \begin{pmatrix} 255 \\ 255 \\ 0 \end{pmatrix}
   \]</li>
</ol>

<p>
<b>Aplicaciones</b>
</p>
<ul class="org-ul">
<li><b>Imágenes digitales</b>: El modelo RGB es la base de la codificación de colores en imágenes digitales, lo que permite representar una amplia gama de colores.</li>
<li><b>Gráficos por computadora</b>: Es el modelo estándar para definir colores en programación y diseño gráfico.</li>
<li><b>Edición de video y fotografía</b>: El modelo RGB se usa en software de edición para manipular colores de imágenes y videos.</li>
</ul>

<p>
<b>Limitaciones</b>
</p>
<ul class="org-ul">
<li><b>Impresión</b>: RGB no se utiliza en la impresión, que emplea un
modelo de color sustractivo llamado CMYK (Cian, Magenta, Amarillo y
Negro).</li>
<li><b>Percepción humana</b>: El modelo RGB no refleja con precisión cómo el
ojo humano percibe el color, lo que llevó a la creación de otros
modelos como CIE Lab.</li>
</ul>

<p>
<b>Variaciones</b>
</p>
<ul class="org-ul">
<li><b>RGBA</b> : Es una extensión del modelo RGB que añade un canal de <b>Alpha</b> para representar la transparencia. Esto es útil en diseño gráfico para gestionar la opacidad.</li>
</ul>
</div>
</div>
</div>



<div id="outline-container-org7b93187" class="outline-2">
<h2 id="org7b93187">Programación</h2>
<div class="outline-text-2" id="text-org7b93187">
</div>
<div id="outline-container-orge340e5a" class="outline-3">
<h3 id="orge340e5a">Creación de una Imagen</h3>
<div class="outline-text-3" id="text-orge340e5a">
<div class="org-src-container">
<pre class="src src-python"><span style="color: #c099ff;">import</span> numpy <span style="color: #c099ff;">as</span> np   <span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Importa la librer&#237;a NumPy, &#250;til para trabajar con arreglos y operaciones num&#233;ricas.</span>
<span style="color: #c099ff;">import</span> cv2 <span style="color: #c099ff;">as</span> cv     <span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Importa la librer&#237;a OpenCV, que se utiliza para procesamiento de im&#225;genes.</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Crea una imagen de 500x500 p&#237;xeles, todos con valor 240 (gris claro). </span>
<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">La imagen tiene solo un canal (escala de grises) y est&#225; inicializada con valores de tipo uint8 (enteros sin signo de 8 bits).</span>
<span style="color: #ff98a4;">img</span> = np.ones<span style="color: #c099ff;">(</span><span style="color: #ff995e;">(</span>500, 500<span style="color: #ff995e;">)</span>, dtype=np.uint8<span style="color: #c099ff;">)</span> * 240

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Modifica algunos p&#237;xeles espec&#237;ficos en las coordenadas (30, 30) a (30, 35) para que tengan un valor de 1 (casi negro).</span>
<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Esto crear&#225; una peque&#241;a l&#237;nea vertical de 6 p&#237;xeles en la imagen de color casi negro.</span>
img<span style="color: #c099ff;">[</span>30, 30<span style="color: #c099ff;">]</span> = 1
img<span style="color: #c099ff;">[</span>30, 31<span style="color: #c099ff;">]</span> = 1
img<span style="color: #c099ff;">[</span>30, 32<span style="color: #c099ff;">]</span> = 1
img<span style="color: #c099ff;">[</span>30, 33<span style="color: #c099ff;">]</span> = 1
img<span style="color: #c099ff;">[</span>30, 34<span style="color: #c099ff;">]</span> = 1
img<span style="color: #c099ff;">[</span>30, 35<span style="color: #c099ff;">]</span> = 1

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Muestra la imagen en una ventana con el t&#237;tulo 'img'. </span>
cv.imshow<span style="color: #c099ff;">(</span><span style="color: #c3e88d;">'img'</span>, img<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Espera a que el usuario presione cualquier tecla para continuar.</span>
cv.waitKey<span style="color: #c099ff;">()</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Cierra todas las ventanas creadas por OpenCV.</span>
cv.destroyAllWindows<span style="color: #c099ff;">()</span>

</pre>
</div>
</div>
</div>

<div id="outline-container-orgbc53dae" class="outline-3">
<h3 id="orgbc53dae">Cargar Imagen</h3>
<div class="outline-text-3" id="text-orgbc53dae">
<div class="org-src-container">
<pre class="src src-python"><span style="color: #c099ff;">import</span> cv2 <span style="color: #c099ff;">as</span> cv  <span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Importa la librer&#237;a OpenCV, que se usa para el procesamiento de im&#225;genes y videos.</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Lee una imagen desde el archivo 'tr.png'. </span>
<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">El segundo argumento '1' indica que se leer&#225; la imagen en color (1 para color, 0 para escala de grises, -1 para incluir el canal alfa si existe).</span>
<span style="color: #ff98a4;">img</span> = cv.imread<span style="color: #c099ff;">(</span><span style="color: #c3e88d;">'tr.png'</span>, 1<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Muestra la imagen le&#237;da en una ventana llamada 'ejemplo'.</span>
cv.imshow<span style="color: #c099ff;">(</span><span style="color: #c3e88d;">'ejemplo'</span>, img<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Espera indefinidamente hasta que el usuario presione una tecla.</span>
cv.waitKey<span style="color: #c099ff;">(</span>0<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Cierra todas las ventanas abiertas por OpenCV.</span>
cv.destroyAllWindows<span style="color: #c099ff;">()</span>

</pre>
</div>
</div>
</div>

<div id="outline-container-org260b1d1" class="outline-3">
<h3 id="org260b1d1">Split y Merge Imagen</h3>
<div class="outline-text-3" id="text-org260b1d1">
<div class="org-src-container">
<pre class="src src-python"><span style="color: #c099ff;">import</span> cv2 <span style="color: #c099ff;">as</span> cv  <span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Importa OpenCV, que es &#250;til para procesamiento de im&#225;genes.</span>
<span style="color: #c099ff;">import</span> numpy <span style="color: #c099ff;">as</span> np  <span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Importa NumPy, que es &#250;til para trabajar con matrices y operaciones num&#233;ricas.</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Carga la imagen '1a.png' en color (1 para color, 0 para escala de grises).</span>
<span style="color: #ff98a4;">img</span> = cv.imread<span style="color: #c099ff;">(</span><span style="color: #c3e88d;">'1a.png'</span>, 1<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Crea una imagen vac&#237;a (llena de ceros, que representa color negro) con el mismo tama&#241;o que la imagen original.</span>
<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">La imagen vac&#237;a tiene un solo canal (escala de grises), por lo que se usa `img.shape[:2]` para obtener las dimensiones de la imagen (alto, ancho).</span>
<span style="color: #ff98a4;">img2</span> = np.zeros<span style="color: #c099ff;">(</span><span style="color: #ff995e;">(</span>img.shape<span style="color: #ff98a4;">[</span>:2<span style="color: #ff98a4;">]</span><span style="color: #ff995e;">)</span>, dtype=np.uint8<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Imprime las dimensiones de la imagen en la terminal (alto, ancho).</span>
<span style="color: #c099ff;">print</span><span style="color: #c099ff;">(</span>img.shape<span style="color: #ff995e;">[</span>:2<span style="color: #ff995e;">]</span><span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Separa los canales rojo (r), verde (g) y azul (b) de la imagen utilizando la funci&#243;n `cv.split()`.</span>
<span style="color: #ff98a4;">r</span>, <span style="color: #ff98a4;">g</span>, <span style="color: #ff98a4;">b</span> = cv.split<span style="color: #c099ff;">(</span>img<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Recombina los canales, pero los reorganiza como rojo, azul y verde (RBG en lugar de RGB).</span>
img3 = cv.merge<span style="color: #c099ff;">(</span><span style="color: #ff995e;">[</span>r, b, g<span style="color: #ff995e;">]</span><span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Crea una imagen que contiene solo el canal rojo, llenando los otros dos canales (verde y azul) con ceros (negro).</span>
r = cv.merge<span style="color: #c099ff;">(</span><span style="color: #ff995e;">[</span>r, img2, img2<span style="color: #ff995e;">]</span><span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Crea una imagen que contiene solo el canal verde, llenando los otros dos canales (rojo y azul) con ceros.</span>
g = cv.merge<span style="color: #c099ff;">(</span><span style="color: #ff995e;">[</span>img2, g, img2<span style="color: #ff995e;">]</span><span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Crea una imagen que contiene solo el canal azul, llenando los otros dos canales (rojo y verde) con ceros.</span>
b = cv.merge<span style="color: #c099ff;">(</span><span style="color: #ff995e;">[</span>img2, img2, b<span style="color: #ff995e;">]</span><span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Muestra la imagen original en una ventana llamada 'ejemplo'.</span>
cv.imshow<span style="color: #c099ff;">(</span><span style="color: #c3e88d;">'ejemplo'</span>, img<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Muestra la imagen que contiene solo el canal rojo.</span>
cv.imshow<span style="color: #c099ff;">(</span><span style="color: #c3e88d;">'r'</span>, r<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Muestra la imagen que contiene solo el canal verde.</span>
cv.imshow<span style="color: #c099ff;">(</span><span style="color: #c3e88d;">'g'</span>, g<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Muestra la imagen que contiene solo el canal azul.</span>
cv.imshow<span style="color: #c099ff;">(</span><span style="color: #c3e88d;">'b'</span>, b<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Muestra la imagen con los canales reorganizados (RBG en lugar de RGB).</span>
cv.imshow<span style="color: #c099ff;">(</span><span style="color: #c3e88d;">'img3'</span>, img3<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Espera indefinidamente a que el usuario presione una tecla.</span>
cv.waitKey<span style="color: #c099ff;">(</span>0<span style="color: #c099ff;">)</span>

<span style="color: #7a88cf;"># </span><span style="color: #7a88cf;">Cierra todas las ventanas abiertas por OpenCV.</span>
cv.destroyAllWindows<span style="color: #c099ff;">()</span>

</pre>
</div>
</div>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="author">Autor: likcos</p>
<p class="date">Created: 2024-09-10 mar 12:18</p>
<p class="validation"><a href="https://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
